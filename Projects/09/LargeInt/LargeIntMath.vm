function LargeIntMath.plus 16
push argument 0
call LargeInt.getNbBlocks 1
push argument 1
call LargeInt.getNbBlocks 1
call Math.max 2
pop local 0
push local 0
push constant 1
add
call Array.new 1
pop local 7
push argument 0
call LargeInt.getArray 1
pop local 5
push argument 1
call LargeInt.getArray 1
pop local 6
push argument 0
call LargeInt.getNbBlocks 1
push constant 1
sub
pop local 2
push argument 1
call LargeInt.getNbBlocks 1
push constant 1
sub
pop local 3
push local 0
pop local 4
push constant 0
pop local 15
label WHILE_EXP0
push local 4
push constant 1
neg
gt
not
if-goto WHILE_END0
push constant 0
pop local 12
push local 2
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 5
add
pop pointer 1
push that 0
pop local 9
push constant 1000
push constant 0
push local 9
add
pop pointer 1
push that 0
call Math.multiply 2
push constant 100
push constant 1
push local 9
add
pop pointer 1
push that 0
call Math.multiply 2
add
push constant 10
push constant 2
push local 9
add
pop pointer 1
push that 0
call Math.multiply 2
add
push constant 3
push local 9
add
pop pointer 1
push that 0
add
pop local 12
label IF_FALSE0
push constant 0
pop local 13
push local 3
push constant 1
neg
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push local 6
add
pop pointer 1
push that 0
pop local 10
push constant 1000
push constant 0
push local 10
add
pop pointer 1
push that 0
call Math.multiply 2
push constant 100
push constant 1
push local 10
add
pop pointer 1
push that 0
call Math.multiply 2
add
push constant 10
push constant 2
push local 10
add
pop pointer 1
push that 0
call Math.multiply 2
add
push constant 3
push local 10
add
pop pointer 1
push that 0
add
pop local 13
label IF_FALSE1
push local 12
push local 13
add
push local 15
add
pop local 14
push local 14
push constant 9999
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop local 15
push local 14
push constant 10000
sub
pop local 14
goto IF_END2
label IF_FALSE2
push constant 0
pop local 15
label IF_END2
push constant 4
call Array.new 1
pop local 11
push constant 0
push local 11
add
push local 14
push constant 1000
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 11
add
push local 14
push constant 0
push local 11
add
pop pointer 1
push that 0
push constant 1000
call Math.multiply 2
sub
push constant 100
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 11
add
push local 14
push constant 0
push local 11
add
pop pointer 1
push that 0
push constant 1000
call Math.multiply 2
sub
push constant 1
push local 11
add
pop pointer 1
push that 0
push constant 100
call Math.multiply 2
sub
push constant 10
call Math.divide 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 11
add
push local 14
push constant 0
push local 11
add
pop pointer 1
push that 0
push constant 1000
call Math.multiply 2
sub
push constant 1
push local 11
add
pop pointer 1
push that 0
push constant 100
call Math.multiply 2
sub
push constant 2
push local 11
add
pop pointer 1
push that 0
push constant 10
call Math.multiply 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push local 7
add
push local 11
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
sub
pop local 2
push local 3
push constant 1
sub
pop local 3
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 7
push local 0
push constant 1
add
push constant 0
not
call LargeInt.new2 3
return
